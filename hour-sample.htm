<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- Generated with d3-generator.com -->
<html>
  <head>
     <title>Bar Chart</title>
     <meta http-equiv="X-UA-Compatible" content="IE=9">
  </head>
  <body>
    <div id="chart"></div>
    <script src="http://d3js.org/d3.v2.min.js"></script>
    <script>
function renderChart() {

var data = d3.csv.parse(d3.select('#csv').text());
var valueLabelWidth = 40; // space reserved for value labels (right)
var barHeight = 20; // height of one bar
var barLabelWidth = 100; // space reserved for bar labels
var barLabelPadding = 5; // padding between bar and bar labels (left)
var gridLabelHeight = 18; // space reserved for gridline labels
var gridChartOffset = 3; // space between start of grid and first bar
var maxBarWidth = 420; // width of the bar with the max value
 
// accessor functions 
var barLabel = function(d) { return d['TimeStamp']; };
var barValue = function(d) { return parseFloat(d['TempSensorAvg']); };
 
// scales
var yScale = d3.scale.ordinal().domain(d3.range(0, data.length)).rangeBands([0, data.length * barHeight]);
var y = function(d, i) { return yScale(i); };
var yText = function(d, i) { return y(d, i) + yScale.rangeBand() / 2; };
var x = d3.scale.linear().domain([0, d3.max(data, barValue)]).range([0, maxBarWidth]);
// svg container element
var chart = d3.select('#chart').append("svg")
  .attr('width', maxBarWidth + barLabelWidth + valueLabelWidth)
  .attr('height', gridLabelHeight + gridChartOffset + data.length * barHeight);
// grid line labels
var gridContainer = chart.append('g')
  .attr('transform', 'translate(' + barLabelWidth + ',' + gridLabelHeight + ')'); 
gridContainer.selectAll("text").data(x.ticks(10)).enter().append("text")
  .attr("x", x)
  .attr("dy", -3)
  .attr("text-anchor", "middle")
  .text(String);
// vertical grid lines
gridContainer.selectAll("line").data(x.ticks(10)).enter().append("line")
  .attr("x1", x)
  .attr("x2", x)
  .attr("y1", 0)
  .attr("y2", yScale.rangeExtent()[1] + gridChartOffset)
  .style("stroke", "#ccc");
// bar labels
var labelsContainer = chart.append('g')
  .attr('transform', 'translate(' + (barLabelWidth - barLabelPadding) + ',' + (gridLabelHeight + gridChartOffset) + ')'); 
labelsContainer.selectAll('text').data(data).enter().append('text')
  .attr('y', yText)
  .attr('stroke', 'none')
  .attr('fill', 'black')
  .attr("dy", ".35em") // vertical-align: middle
  .attr('text-anchor', 'end')
  .text(barLabel);
// bars
var barsContainer = chart.append('g')
  .attr('transform', 'translate(' + barLabelWidth + ',' + (gridLabelHeight + gridChartOffset) + ')'); 
barsContainer.selectAll("rect").data(data).enter().append("rect")
  .attr('y', y)
  .attr('height', yScale.rangeBand())
  .attr('width', function(d) { return x(barValue(d)); })
  .attr('stroke', 'white')
  .attr('fill', 'steelblue');
// bar value labels
barsContainer.selectAll("text").data(data).enter().append("text")
  .attr("x", function(d) { return x(barValue(d)); })
  .attr("y", yText)
  .attr("dx", 3) // padding-left
  .attr("dy", ".35em") // vertical-align: middle
  .attr("text-anchor", "start") // text-align: right
  .attr("fill", "black")
  .attr("stroke", "none")
  .text(function(d) { return d3.round(barValue(d), 2); });
// start line
barsContainer.append("line")
  .attr("y1", -gridChartOffset)
  .attr("y2", yScale.rangeExtent()[1] + gridChartOffset)
  .style("stroke", "#000");

}
    </script>
    <script id="csv" type="text/csv">TempSensorAvg,TimeStamp
19.86667,2:20:07 PM
20.479,2:21:09 PM
20.91233,2:22:06 PM
21.33733,2:23:06 PM
21.45833,2:24:06 PM
21.45,2:25:09 PM
21.28733,2:26:11 PM
21.2,2:27:12 PM
21.079,2:28:09 PM
21.025,2:29:06 PM
20.88333,2:30:07 PM
20.79567,2:31:06 PM
20.70833,2:32:06 PM
20.62067,2:33:06 PM
20.5,2:34:06 PM
20.34567,2:35:09 PM
20.31233,2:36:06 PM
20.225,2:37:08 PM
20.17067,2:38:09 PM
20.13733,2:39:06 PM
20.104,2:40:07 PM
20.05,2:41:11 PM
19.99567,2:42:06 PM
19.96233,2:43:09 PM
19.254,4:06:08 PM
19.22067,4:08:06 PM
19.24167,4:09:06 PM
19.254,4:10:07 PM
19.22067,4:11:06 PM
19.22067,4:12:06 PM
19.22067,4:13:09 PM
19.22067,4:14:14 PM
19.22067,4:15:09 PM
19.22067,4:16:09 PM
19.22067,4:17:08 PM
19.22067,4:18:06 PM
19.22067,4:19:07 PM
19.22067,4:20:06 PM
19.22067,4:21:06 PM
19.22067,4:22:06 PM
19.2,4:23:06 PM
19.22067,4:24:06 PM
19.22067,4:25:06 PM
19.22067,4:26:09 PM
19.2,4:27:11 PM
19.22067,4:28:06 PM
19.16667,4:29:06 PM
19.18733,4:30:11 PM
19.025,5:27:07 PM
19.11233,5:28:09 PM
19.16667,5:29:07 PM
19.28733,5:30:09 PM
19.34167,5:31:06 PM
19.46233,5:32:09 PM
19.429,8:30:11 PM
19.48333,8:31:07 PM
19.53733,8:32:06 PM
19.604,8:33:07 PM
19.73733,8:34:17 PM
19.86667,8:35:09 PM
</script>
    <script>renderChart();</script>
  </body>
</html>